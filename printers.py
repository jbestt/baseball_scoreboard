import mlbgame
import data

def print_games(games_today):
    for team in games_today.keys():
        for game in games_today[team]:
            if len(game) > 0:
                for i in game:
                    print(i)
    
def print_overview_object(scoreboard):
    if isinstance(scoreboard,mlbgame.game.Overview):
        print("ampm",scoreboard.ampm)
        print("aw_lg_ampm",scoreboard.aw_lg_ampm)
        print("away_ampm",scoreboard.away_ampm)
        print("away_code",scoreboard.away_code)
        print("away_division",scoreboard.away_division)
        print("away_file_code",scoreboard.away_file_code)
#        print("away_games_back",scoreboard.away_games_back)
#        print("away_games_back_wildcard",scoreboard.away_games_back_wildcard)
        print("away_league_id",scoreboard.away_league_id)
        print("away_loss",scoreboard.away_loss)
        print("away_name_abbrev",scoreboard.away_name_abbrev)
        print("away_preview_link",scoreboard.away_preview_link)
        print("away_recap_link",scoreboard.away_recap_link)
        print("away_sport_code",scoreboard.away_sport_code)
        print("away_team_city",scoreboard.away_team_city)
        print("away_team_errors",scoreboard.away_team_errors)
        print("away_team_hits",scoreboard.away_team_hits)
        print("away_team_id",scoreboard.away_team_id)
        print("away_team_name",scoreboard.away_team_name)
        print("away_team_runs",scoreboard.away_team_runs)
        print("away_time",scoreboard.away_time)
        print("away_time_zone",scoreboard.away_time_zone)
        print("away_win",scoreboard.away_win)
        print("balls",scoreboard.balls)
        print("day",scoreboard.day)
        print("double_header_sw",scoreboard.double_header_sw)
        print("first_pitch_et",scoreboard.first_pitch_et)
        print("game_data_directory",scoreboard.game_data_directory)
        print("game_nbr",scoreboard.game_nbr)
        print("game_pk",scoreboard.game_pk)
        print("game_type",scoreboard.game_type)
        print("gameday_link",scoreboard.gameday_link)
        print("gameday_sw",scoreboard.gameday_sw)
        print("hm_lg_ampm",scoreboard.hm_lg_ampm)
        print("home_ampm",scoreboard.home_ampm)
        print("home_code",scoreboard.home_code)
        print("home_division",scoreboard.home_division)
        print("home_file_code",scoreboard.home_file_code)
#        print("home_games_back",scoreboard.home_games_back)
#        print("home_games_back_wildcard",scoreboard.home_games_back_wildcard)
        print("home_league_id",scoreboard.home_league_id)
        print("home_loss",scoreboard.home_loss)
        print("home_name_abbrev",scoreboard.home_name_abbrev)
        print("home_preview_link",scoreboard.home_preview_link)
        print("home_recap_link",scoreboard.home_recap_link)
        print("home_sport_code",scoreboard.home_sport_code)
        print("home_team_city",scoreboard.home_team_city)
        print("home_team_errors",scoreboard.home_team_errors)
        print("home_team_hits",scoreboard.home_team_hits)
        print("home_team_id",scoreboard.home_team_id)
        print("home_team_name",scoreboard.home_team_name)
        print("home_team_runs",scoreboard.home_team_runs)
        print("home_time",scoreboard.home_time)
        print("home_time_zone",scoreboard.home_time_zone)
        print("home_win",scoreboard.home_win)
        print("id",scoreboard.id)
        print("ind",scoreboard.ind)
        print("inning",scoreboard.inning)
        print("inning_state",scoreboard.inning_state)
        print("is_no_hitter",scoreboard.is_no_hitter)
        print("is_perfect_game",scoreboard.is_perfect_game)
        print("league",scoreboard.league)
        print("location",scoreboard.location)
        print("note",scoreboard.note)
        print("original_date",scoreboard.original_date)
        print("outs",scoreboard.outs)
#        print("photos_link",scoreboard.photos_link)
        print("preview",scoreboard.preview)
        print("scheduled_innings",scoreboard.scheduled_innings)
        print("status",scoreboard.status)
        print("strikes",scoreboard.strikes)
        print("tbd_flag",scoreboard.tbd_flag)
        print("tiebreaker_sw",scoreboard.tiebreaker_sw)
        print("time",scoreboard.time)
        print("time_aw_lg",scoreboard.time_aw_lg)
        print("time_date",scoreboard.time_date)
        print("time_date_aw_lg",scoreboard.time_date_aw_lg)
        print("time_date_hm_lg",scoreboard.time_date_hm_lg)
        print("time_hm_lg",scoreboard.time_hm_lg)
        print("time_zone",scoreboard.time_zone)
        print("time_zone_aw_lg",scoreboard.time_zone_aw_lg)
        print("time_zone_hm_lg",scoreboard.time_zone_hm_lg)
        print("top_inning",scoreboard.top_inning)
#        print("tv_station",scoreboard.tv_station)
        print("tz_aw_lg_gen",scoreboard.tz_aw_lg_gen)
        print("tz_hm_lg_gen",scoreboard.tz_hm_lg_gen)
        print("venue",scoreboard.venue)
        print("venue_id",scoreboard.venue_id)
        print("venue_w_chan_loc",scoreboard.venue_w_chan_loc)
        print("wrapup_link",scoreboard.wrapup_link)
#        print("division_id",scoreboard.division_id)    
#        print("division_link",scoreboard.division_link)
    
    
def print_gamescoreboard_object(scoreboard):
    if isinstance(scoreboard,mlbgame.game.GameScoreboard):
        print("Valid Scoreboard")
        print("Away Team",scoreboard.away_team)
        print("Away Team Errors",scoreboard.away_team_errors)
        print("Away Team Hits",scoreboard.away_team_hits)
        print("Away Team Runs",scoreboard.away_team_runs)
        print("Scoreboard Date",scoreboard.date)
        print("Game ID",scoreboard.game_id)
        print("Game League",scoreboard.game_league)
        print("Game Start Time",scoreboard.game_start_time)
        print("Game Status",scoreboard.game_status)
        print("Game Tag",scoreboard.game_tag)
        print("Home Team",scoreboard.home_team)
        print("Home Team Errors",scoreboard.home_team_errors)
        print("Home Team Hits",scoreboard.home_team_hits)
        print("Home Team Runs",scoreboard.home_team_runs)
        print("Losing Pitcher",scoreboard.l_pitcher)
        print("Losing Picher Losses",scoreboard.l_pitcher_losses)
        print("Losing Pitcher Wins",scoreboard.l_pitcher_wins)
        print("Losing Team",scoreboard.l_team)
        print("Saving Pitcher",scoreboard.sv_pitcher)
        print("Saves",scoreboard.sv_pitcher_saves)
        print("Winning Pitcher",scoreboard.w_pitcher)
        print("Winning Pitcher Losses",scoreboard.w_pitcher_losses)
        print("Winning Pitcher Wins",scoreboard.w_pitcher_wins)
        print("Winning Team",scoreboard.w_team)
    else:
        print("Input is not a valid scoreboard.")
        
def print_team_box(team):
    return data.get_scoreboard_by_team(team).print_scoreboard()